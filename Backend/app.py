from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
import os
import base64
from PIL import Image
from image_caption_model import image_to_prompt
from IPython.display import display
app = Flask(__name__)
CORS(app)  # Allow cross-origin requests

UPLOAD_FOLDER = "uploads"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)  # Create uploads folder if not exists


@app.route("/")
def run():
    return "Hello World!"

@app.route("/generate_prompt", methods=["POST"])
def upload_file():
    if "image" not in request.files:
        return jsonify({"error": "No file part"}), 400

    file = request.files["image"]
    if file.filename == "":
        return jsonify({"error": "No selected file"}), 400

    file_path = os.path.join(UPLOAD_FOLDER, file.filename)
    file.save(file_path)  # Save the file
        
    i = Image.open(file_path)
    display(i)
    mode = "best"
    #prompt = image_to_prompt(i, mode)
    # Dummy Caption Generation (Replace with ML Model)
    generated_caption = f"Caption for {file.filename} This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model"
    print(generated_caption)
    return jsonify({"caption": generated_caption})

@app.route("/generate_image", methods=["POST"])
def generating_image():
    data = request.json
    print(data)
    if not data or "prompt" not in data:
        return jsonify({"error": "Prompt not found"}), 400

    prompt = data["prompt"]
    print(prompt)
    #generate_image(prompt)

    image_path = "Images/images3.jpg" 
    with open(image_path, "rb") as img_file:
        base64_string = base64.b64encode(img_file.read()).decode("utf-8")

    #return jsonify({"image_data": base64_string})

    if not os.path.exists(image_path):
        return jsonify({"error": "Generated image not found"}), 404

    # Send the image file to the frontend
    return send_file(image_path, mimetype="image/jpeg")
 
if __name__ == "__main__":
    app.run(debug=True)
