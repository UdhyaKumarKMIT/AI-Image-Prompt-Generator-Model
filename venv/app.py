from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
import os
import base64
from PIL import Image

from image_caption_model import image_to_prompt
from IPython.display import display

from pymongo import MongoClient
app = Flask(__name__)
CORS(app)  # Allow cross-origin requests

UPLOAD_FOLDER = "uploads"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)  # Create uploads folder if not exists

# MongoDB Connection
client = MongoClient("mongodb://localhost:27017/")
db = client["ImagePromptGenerator"]  # Database name
collection = db["Images"]  # Collection name

@app.route("/")
def run():
    return "Hello World!"



@app.route("/generate_prompt", methods=["POST"])
def upload_file():
    if "image" not in request.files:
        return jsonify({"error": "Image File Not Found"}), 400

    file = request.files["image"]
    if file.filename == "":
        return jsonify({"error": "No selected file"}), 400

    file_path = os.path.join(UPLOAD_FOLDER, file.filename)

    existing_entry = collection.find_one({"image_path": file_path})
    if existing_entry:
        print("File exisit in db")
        return jsonify({"caption": "this is from Databse mongodb "+existing_entry["generated_caption"]})

    file.save(file_path)  # Save the file
        
    i = Image.open(file_path)
    mode = "best"
    #prompt = image_to_prompt(i, mode)
    # Dummy Caption Generation (Replace with ML Model)
    generated_caption = f"Caption for {file.filename} This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model This is the caption generated by AI Model"
    print(generated_caption)
     # Store in MongoDB
    image_data = {
        "image_path": file_path,
        "generated_caption": generated_caption,
    }
    collection.insert_one(image_data)
    return jsonify({"caption": generated_caption})
   

@app.route("/generate_image", methods=["POST"])
def generating_image():
    data = request.json
    if not data or "prompt" not in data:
        return jsonify({"error": "Prompt not found"}), 400

    prompt = data["prompt"]
    print(prompt)
    #generate_image(prompt)
    generated_data = {
        "prompt": prompt,
        "generated_image_path": image_path
    }
    collection.insert_one(generated_data)
    image_path = "Images\\images3.jpg" 
    with open(image_path, "rb") as img_file:
        base64_string = base64.b64encode(img_file.read()).decode("utf-8")

    if not os.path.exists(image_path):
        return jsonify({"error": "Generated image not found"}), 404
 
   
    return send_file(image_path, mimetype="image/jpeg")
 


if __name__ == "__main__":
    app.run(debug=True)
